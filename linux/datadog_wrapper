#!/usr/bin/env sh

CURRENT_DIR=$(pwd)

# Required to add the AAS metadata 
export DD_AZURE_APP_SERVICES=1

if [ -z "$DD_DIR" ]; then
    DD_DIR="/home/datadog"
fi

if [ -z "$DD_BINARIES_URL" ]; then
    DD_BINARIES_URL="https://github.com/DataDog/datadog-aas-extension/releases/download"
fi

if [ -z "$DD_AAS_LINUX_VERSION" ]; then
    DD_AAS_LINUX_VERSION="linux-v0.1.2-beta"
fi

setUpCommonEnv() {
    echo "Creating datadog directory"
    mkdir -p $DD_DIR && cd $DD_DIR || return

    FILE=trace-agent-${DD_AAS_LINUX_VERSION}.tar.gz

    if [ ! -f $FILE ]; then 

        if [ -f "trace-agent" ]; then 
            echo "Removing old versions of the trace agent"
            rm trace-agent* 
        fi

        echo "Downloading required datadog binaries from $DD_BINARIES_URL"
        curl -L $DD_BINARIES_URL/$FILE -o $FILE || return

        echo "Decompressing files"
        tar -zxf $FILE || return
    else
        echo "Version $DD_AAS_LINUX_VERSION of the trace agent previously installed"
    fi
    
    echo "Starting trace agent"
    ./trace-agent &
    TRACER_PID=$!
    trap 'kill $TRACER_PID ; exit' INT
}

setUpNodeEnv() {
    echo "Setting up Datadog tracing for Node"

    setUpCommonEnv || return

    echo "Installing Node tracer"
    yarn add dd-trace || return

    ORIG_NODE_OPTIONS=$NODE_OPTIONS
    export NODE_OPTIONS="--require=$DD_DIR/node_modules/dd-trace/init $ORIG_NODE_OPTIONS"

    # confirm updates to NODE_OPTIONS
    node --help >/dev/null || (export NODE_OPTIONS=$ORIG_NODE_OPTIONS && return)
}

setUpDotnetEnv() {
    echo "Setting up Datadog tracing for .NET"

    setUpCommonEnv || return

    if [ -z "$DD_DOTNET_TRACER_VERSION" ]; then
        DD_DOTNET_TRACER_VERSION=2.19.0
    fi
    DD_DOTNET_TRACER_FILE=datadog-dotnet-apm-${DD_DOTNET_TRACER_VERSION}.tar.gz
    DD_DOTNET_TRACER_URL=https://github.com/DataDog/dd-trace-dotnet/releases/download/v${DD_DOTNET_TRACER_VERSION}/${DD_DOTNET_TRACER_FILE}

    echo "Installing .NET tracer from $DD_DOTNET_TRACER_URL"
    curl -L $DD_DOTNET_TRACER_URL -o $DD_DOTNET_TRACER_FILE|| return
    tar -xzf $DD_DOTNET_TRACER_FILE || return

    export CORECLR_ENABLE_PROFILING=1
    export CORECLR_PROFILER={846F5F1C-F9AE-4B07-969E-05C26BC060D8}
    export CORECLR_PROFILER_PATH=${DD_DIR}/Datadog.Trace.ClrProfiler.Native.so
    export DD_DOTNET_TRACER_HOME=${DD_DIR}
}

if [ "$WEBSITE_STACK" = "NODE" ]; then
    setUpNodeEnv;
elif [ "$WEBSITE_STACK" = "DOTNETCORE" ]; then
    setUpDotnetEnv;
fi

echo "Executing start command: \"$DD_START_APP\""
cd $CURRENT_DIR
eval "$DD_START_APP"

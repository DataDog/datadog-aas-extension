# image: mcr.microsoft.com/dotnet/core/sdk:3.1
#
# dotnet-package:
#   tags: [ "runner:main" ]
#   script:
#     - echo "Installing dependencies"
#     - apt-get update
#     - apt-get install unzip
#     - bash ./dotnet/build-packages.sh
#   artifacts:
#     expire_in: 1 weeks
#     paths:
#       - package
#
# java-package:
#   tags: [ "runner:main" ]
#   script:
#     - echo "Installing dependencies"
#     - apt-get update
#     - apt-get install unzip
#     - bash ./java/build-packages.sh
#   artifacts:
#     expire_in: 1 weeks
#     paths:
#       - package

build-agent-process-manager-module:
  tags: ["windowsversion:2022"]
  image: mcr.microsoft.com/dotnet/framework/sdk:4.8-windowsservercore-ltsc2022
  script:
    - $env:path
    - $env:path="C:\ProgramFiles(x86)\Microsoft Visual Studio\2022\BuildTools\MSBuild\Current\Bin\;$env:path"
    - $env:path
    - msbuild node/AgentProcessManager/AgentProcessManager.sln /p:Configuration=Release /p:Platform=x64
    - msbuild node/AgentProcessManager/AgentProcessManager.sln /p:Configuration=Release /p:Platform=x86
  artifacts:
    paths:
      - node/AgentProcessManager/x64/Release/AgentProcessManager.dll
      - node/AgentProcessManager/Release/AgentProcessManager.dll

build-agent-process-manager-module-2:
  tags: ["windowsversion:2022"]
  image: mcr.microsoft.com/dotnet/framework/sdk:4.8-windowsservercore-ltsc2022
  script:
    - $env:path
    - $env:path="C:\ProgramFiles(x86)\Microsoft Visual Studio\2022\BuildTools\MSBuild\Current\Bin\amd64;$env:path"
    - $env:path
    - msbuild node/AgentProcessManager/AgentProcessManager.sln /p:Configuration=Release /p:Platform=x64
    - msbuild node/AgentProcessManager/AgentProcessManager.sln /p:Configuration=Release /p:Platform=x86

build-agent-process-manager-module-3:
  tags: ["windowsversion:2022"]
  image: mcr.microsoft.com/dotnet/framework/sdk:4.8-windowsservercore-ltsc2022
  script:
    - $env:path
    - nuget help

build-process-manager:
  tags: ["arch:amd64"]
  image: registry.ddbuild.io/images/mirror/rust:1.73
  script:
    - apt update
    - apt install -y mingw-w64
    - rustup target add x86_64-pc-windows-gnu
    - cargo build --manifest-path=node/process_manager/Cargo.toml --release --target=x86_64-pc-windows-gnu
  artifacts:
    paths:
      - node/process_manager/target/x86_64-pc-windows-gnu/release/process_manager.exe

run_bash_script:
  tags: ["arch:amd64"]
  image: registry.ddbuild.io/images/mirror/mcr.microsoft.com/dotnet/sdk:8.0.0-alpine3.18
  needs:
    - build-agent-process-manager-module
    - build-process-manager
  script:
    - echo "Installing dependencies"
    - apt update
    - apt install -y unzip rsync
    - export NVM_DIR="$HOME/.nvm"
    - curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.7/install.sh | bash
    - '[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"'
    - nvm install 20.11.0
    - cp node/AgentProcessManager/x64/Release/AgentProcessManager.dll node/AgentProcessManager/Release/AgentProcessManager.dll node/process_manager/target/x86_64-pc-windows-gnu/release/process_manager.exe node/src
    - bash ./node/build-packages.sh
